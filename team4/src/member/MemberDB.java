//
//
//  Generated by StarUML(tm) Java Add-In

// 멤버 계정 추가/조회
//
//  @ Project : 개인정보관리시스템
//  @ File Name : MemberDB.java
//  @ Date : 2021-12-10
//  @ Author : KAJ
//
//
package member;
//import account.AccountCtrl;
import java.sql.*;

import team4.DBConnection;


/***********************************************************
 * MemberDB : 멤버디비의 데이터 검색, 삽입을 관리
/***********************************************************/
public class MemberDB {
	private String id;				// 아이디
	private String password;		// 패스워드
	private String name;			// 이름
	private String birthdate;		// 생일
	private String phoneNumber;		// 전화번호
	private String address;			// 주소
	private DBConnection dbcon;		// MemberDB 데이터베이스 연결 객체
	
	/***********************************************************
     * 생성자1 : Memberdb를 다룰 객체 생성&데이터베이스 연결
    /***********************************************************/
	public MemberDB() {
		dbcon = new DBConnection();
	}
	/***********************************************************
     * 생성자2 : Member의 정보를 담은 객체 생성
    /***********************************************************/
	public MemberDB(String id, String pwd, String name, String birthdate, String phoneNumber, String address) {
		this.id = id;
		this.password = pwd;
		this.name = name;
		this.birthdate = birthdate;
		this.phoneNumber = phoneNumber;
		this.address = address;
	}
	// 속성의 SET/GET 메소드
	public String getId() {
		return id;
	}
	public void setId(String id) {
		this.id = id;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getBirthdate() {
		return birthdate;
	}
	public void setBirthdate(String birthdate) {
		this.birthdate = birthdate;
	}
	public String getPhoneNumber() {
		return phoneNumber;
	}
	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}
	public String getAddress() {
		return address;
	}
	public void setAddress(String address) {
		this.address = address;
	}

	/***********************************************************
     * boolean inserMemberInfo() : memberdb에 데이터(새로운 회원 정보) 삽입
     * @param id			아이디
	 * @param password		패스워드
	 * @param name			이름
	 * @param birthdate		생일
	 * @param phoneNumber	전화번호
	 * @param address		주소
	 * @return 				데이터 삽입(성공: true, 실패: false)
    /***********************************************************/
	public boolean insertMemberInfo(String id, String password, String name, String birthdate, String phoneNumber, String address) {
		Statement stmt = null;
		
		try {
			// 데이터베이스 연결
			stmt = dbcon.db_connect();
			
			// memberdb에 새로운 회원 삽입
			stmt.executeUpdate("insert into memberdb values ('"
					+ id + "', '"
					+ password + "', '"
					+ name + "', '"
					+ birthdate + "', '"
					+ phoneNumber + "', '"
					+ address + "' );");
			// memberdb 닫기
			dbcon.db_close();
			return true;
		} catch (SQLException ex) {
			System.out.println("새로운 회원 삽입 SQL 에러");
		}
		return false;
	}    
	/***********************************************************
     * MemberDB getMemberInfo() : memberdb의 데이터 검색
     * @param id			아이디
     * @param password		패스워드
     * @return				패스워드 일치 여부 반환(일치: MemberDB, 불일치: null)
    /***********************************************************/
    public MemberDB getMemberInfo(String id) {//id를 통한 정보 불러오기 성공
    	Statement stmt;
    	String pwd = null;
    	String name = null;
    	String birthdate = null;		
    	String phoneNumber = null;		
    	String address = null;	
    	try {
    		// 데이터베이스 연결
    		stmt = dbcon.db_connect();
    		// 로그인 아이디에 맞는 패스워드인지 검사
    		String sql = "select * from memberdb where id='" + id+"'";
    		ResultSet rs = stmt.executeQuery(sql);
    		// 데이터베이스 정보 저장
    		while (rs.next()) {
    			pwd = rs.getString(2);
    			name = rs.getString(3);
    			birthdate = rs.getString(4);
    			phoneNumber = rs.getString(5);
    			address = rs.getString(6);
    			return new MemberDB(id, pwd, name, birthdate, phoneNumber, address);
    		}
    		dbcon.db_close();
    	} 
    	// 데이터베이스 연결 에러
    	catch (SQLException ex) {
    		ex.printStackTrace();
    		return null;
    	}
    	return null;
    }
}
	
