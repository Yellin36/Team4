package team4;
//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : 개인정보관리시스템
//  @ File Name : MainScreen.java
//  @ Date : 2021-12-16
//  @ Author : 
//
//
import java.awt.*;

import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;

import inquiry.*;
import login.*;

/***********************************************************
/ MainScreen : 앱 실행 첫 화면
/***********************************************************/
public class MainScreen extends JFrame {
	private String id = null;
	
    private JButton searchBtn = new JButton("조회하기");				// 조회하기 버튼
    private JButton notificationViewBtn = new JButton("알림");		// 알림 버튼
    private JButton loginBtn = new JButton("로그인");					// 로그인 버튼
    private JButton selfAuthenticationBtn = new JButton("본인인증");	// 본인인증 버튼
    private JButton idArrangeBtn = new JButton("ID정리하기");			// 계정정리하기 버튼

    /***********************************************************
    / 생성자 : 메인화면을 보여줌
    / boolean chk : 로그인 체크 유무(false: 로그인x, true: 로그인o)
    /***********************************************************/
    public MainScreen(boolean chk, String id) {
    	this.id = id;
    	setTitle("개인정보관리시스템");
    	setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    	
    	setFrame(chk);
    	setListener();
    	
    	setLocation(100,100);
    	setSize(500, 500);
    	setVisible(true);
    }
    
    /***********************************************************
    / setFrame() : 메인화면의 구성
    / boolean chk : 로그인 체크 유무(false: 로그인x, true: 로그인o)
    /***********************************************************/
    private void setFrame(boolean chk) {
    	// 기본 창
    	JPanel cpane = new JPanel();
    	setContentPane(cpane);
    	cpane.setLayout(null);
    	
    	// 로그인버튼, 보인인증 버튼, 알린 버튼을 담을 컨테이너
    	Container pane = new Container();
    	pane.setLayout(new FlowLayout());
    
    	// 조회버튼, ID정리버튼, 컨테이너 위치 지정
    	searchBtn.setBounds(150, 150, 200, 50);
    	idArrangeBtn.setBounds(150, 250, 200, 50);
    	pane.setBounds(100,5, 300, 50);
    	
    	// 로그인 유무(chk : true-> 로그인상태, false -> 로그아웃상태)
    	if(chk) loginBtn.setText("로그아웃");
    	else loginBtn.setText("로그인");
    	
    	// 컨테이너에 로그인버튼, 보인인증버튼, 알림버튼 추가
    	pane.add(loginBtn);
    	pane.add(selfAuthenticationBtn);
    	pane.add(notificationViewBtn);
    	
    	// 창에 컨테이너, 조회버튼, ID정리버튼 추가
    	cpane.add(pane);
    	cpane.add(searchBtn);
    	cpane.add(idArrangeBtn); 
    }
    /***********************************************************
    / setListener() : 화면에 띄운 버튼에 이벤트가 발생하였을 시 동작할 함수 모음
    /***********************************************************/
    private void setListener() {
    	// 조회하기버튼에 이벤트가 발생하였을시 실행되는 함수
    	searchBtn.addActionListener(new ActionListener() {
    		public void actionPerformed(ActionEvent e) {
    			if(id != null) {
    				new InquiryScreen(id);
    				setVisible(false);
    			}
    			else JOptionPane.showMessageDialog(null, "로그인해주십시오.");
    		}
    	});
    	// 로그인버튼에 이벤트가 발생하였을시 실행되는 함수
    	loginBtn.addActionListener(new ActionListener() {
    		public void actionPerformed(ActionEvent e) {
    			// 로그아웃 상태: 로그인 버튼을 클릭하였을 시
    			if(loginBtn.getText().equals("로그인")) {	
    				// 로그인화면으로 전환
    				new LoginScreen();	
    				setVisible(false);
    			}
    			// 로그인 상태: 로그아웃 버튼을 클릭하였을 시
    			else {
    				loginBtn.setText("로그인");
    				id = null;
    			}
    		}
    	});
    }
    /***********************************************************
    / main() : 앱 실행 시 실행되는 메인함수
    /***********************************************************/
    public static void main(String args[]) {
    	 // 메인스크린 생성
    	 new MainScreen(false, null);
    }
}